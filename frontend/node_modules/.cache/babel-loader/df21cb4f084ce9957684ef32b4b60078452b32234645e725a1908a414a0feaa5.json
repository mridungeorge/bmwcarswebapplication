{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mridu\\\\cybsecproj3\\\\frontend\\\\src\\\\components\\\\RegistrationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/register\", {\n        username,\n        password\n      });\n      if (response.data.success) {\n        navigate(\"/login-success\"); // Change as needed.\n      } else {\n        setErrorMessage(response.data.message || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      const axiosError = error;\n      if (axiosError.response) {\n        setErrorMessage(axiosError.response.data.message || \"An error occurred during registration.\");\n      } else {\n        setErrorMessage(\"An unknown error occurred. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"SfGRGnwvr9N8J2JKe4PvsNHinvQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","response","post","data","success","message","error","axiosError","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mridu/cybsecproj3/frontend/src/components/RegistrationForm.tsx"],"sourcesContent":["import React, { useState, FormEvent } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction RegistrationForm() {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/register\", {\r\n        username,\r\n        password,\r\n      });\r\n      if (response.data.success) {\r\n        navigate(\"/login-success\"); // Change as needed.\r\n      } else {\r\n        setErrorMessage(\r\n          response.data.message || \"Registration failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      const axiosError = error as AxiosError;\r\n      if (axiosError.response) {\r\n        setErrorMessage(\r\n          axiosError.response.data.message ||\r\n            \"An error occurred during registration.\"\r\n        );\r\n      } else {\r\n        setErrorMessage(\"An unknown error occurred. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Your form inputs and submit button */}\r\n      </form>\r\n      {errorMessage && <div>{errorMessage}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAOC,KAAK,MAAsB,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAClE,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAOC,KAAiC,IAAK;IAChEA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAChCG,eAAe,CAAC,yBAAyB,CAAC;MAC1C;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,oCAAoC,EAAE;QACtEb,QAAQ;QACRE;MACF,CAAC,CAAC;MACF,IAAIU,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBP,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLD,eAAe,CACbK,QAAQ,CAACE,IAAI,CAACE,OAAO,IAAI,wCAC3B,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMC,UAAU,GAAGD,KAAmB;MACtC,IAAIC,UAAU,CAACN,QAAQ,EAAE;QACvBL,eAAe,CACbW,UAAU,CAACN,QAAQ,CAACE,IAAI,CAACE,OAAO,IAC9B,wCACJ,CAAC;MACH,CAAC,MAAM;QACLT,eAAe,CAAC,8CAA8C,CAAC;MACjE;IACF;EACF,CAAC;EAED,oBACEV,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAMuB,QAAQ,EAAEX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,EACNlB,YAAY,iBAAIT,OAAA;MAAAsB,QAAA,EAAMb;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACzB,EAAA,CAhDQD,gBAAgB;EAAA,QAKNH,WAAW;AAAA;AAAA8B,EAAA,GALrB3B,gBAAgB;AAkDzB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}