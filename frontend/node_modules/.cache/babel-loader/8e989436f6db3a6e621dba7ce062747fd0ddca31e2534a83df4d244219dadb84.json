{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mridu\\\\cybsecproj3\\\\frontend\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\n        username,\n        password\n      });\n      if (response.data.success) {\n        navigate(\"/dashboard\"); // Adjust the redirect path as necessary.\n      } else {\n        setErrorMessage(\"Invalid username or password\");\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        var _serverError$response;\n        const serverError = error;\n        setErrorMessage(((_serverError$response = serverError.response) === null || _serverError$response === void 0 ? void 0 : _serverError$response.data.message) || \"An error occurred during login\");\n      } else {\n        setErrorMessage(\"An error occurred during login\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_s(LoginForm, \"OcEh96ookApaGYrUhZcJPgbvkKE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","post","data","success","error","isAxiosError","_serverError$response","serverError","message","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mridu/cybsecproj3/frontend/src/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface ErrorResponse {\r\n  message: string;\r\n}\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      if (response.data.success) {\r\n        navigate(\"/dashboard\"); // Adjust the redirect path as necessary.\r\n      } else {\r\n        setErrorMessage(\"Invalid username or password\");\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ErrorResponse>;\r\n        setErrorMessage(\r\n          serverError.response?.data.message || \"An error occurred during login\"\r\n        );\r\n      } else {\r\n        setErrorMessage(\"An error occurred during login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return <div className=\"login-form-container\">{/* Form JSX here */}</div>;\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAsB,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAmC,IAAK;IAClEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,iCAAiC,EAAE;QACnEX,QAAQ;QACRE;MACF,CAAC,CAAC;MACF,IAAIQ,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBP,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLD,eAAe,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd,IAAIpB,KAAK,CAACqB,YAAY,CAACD,KAAK,CAAC,EAAE;QAAA,IAAAE,qBAAA;QAC7B,MAAMC,WAAW,GAAGH,KAAkC;QACtDT,eAAe,CACb,EAAAW,qBAAA,GAAAC,WAAW,CAACP,QAAQ,cAAAM,qBAAA,uBAApBA,qBAAA,CAAsBJ,IAAI,CAACM,OAAO,KAAI,gCACxC,CAAC;MACH,CAAC,MAAM;QACLb,eAAe,CAAC,gCAAgC,CAAC;MACnD;IACF;EACF,CAAC;EAED,oBAAOR,OAAA;IAAKsB,SAAS,EAAC;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA2B,CAAC;AAC1E;AAACxB,EAAA,CA/BQD,SAAS;EAAA,QAICH,WAAW;AAAA;AAAA6B,EAAA,GAJrB1B,SAAS;AAiClB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}