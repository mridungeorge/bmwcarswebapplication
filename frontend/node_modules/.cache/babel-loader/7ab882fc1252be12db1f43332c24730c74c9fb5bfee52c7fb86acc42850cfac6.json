{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mridu\\\\cybsecproj3\\\\frontend\\\\src\\\\components\\\\RegistrationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./RegistrationForm.css\"; // Assumes your CSS file is named RegistrationForm.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/register\", {\n        username,\n        password\n      });\n      if (response.data.success) {\n        navigate(\"/login\");\n      } else {\n        setErrorMessage(response.data.message || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      const axiosError = error; // Type assertion for the error\n      if (axiosError.response) {\n        setErrorMessage(axiosError.response.data.message || \"An error occurred during registration.\");\n      } else {\n        setErrorMessage(\"An error occurred during registration. Please try again.\");\n      }\n      console.error(\"Registration error\", axiosError);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"SfGRGnwvr9N8J2JKe4PvsNHinvQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","response","post","data","success","message","error","axiosError","console","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/mridu/cybsecproj3/frontend/src/components/RegistrationForm.tsx"],"sourcesContent":["import React, { useState, FormEvent } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./RegistrationForm.css\"; // Assumes your CSS file is named RegistrationForm.css\r\n\r\ninterface RegistrationResponse {\r\n  success: boolean;\r\n  message?: string;\r\n}\r\n\r\nfunction RegistrationForm() {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post<RegistrationResponse>(\r\n        \"http://localhost:5000/api/register\",\r\n        {\r\n          username,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        setErrorMessage(\r\n          response.data.message || \"Registration failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      const axiosError = error as AxiosError<RegistrationResponse>; // Type assertion for the error\r\n      if (axiosError.response) {\r\n        setErrorMessage(\r\n          axiosError.response.data.message ||\r\n            \"An error occurred during registration.\"\r\n        );\r\n      } else {\r\n        setErrorMessage(\r\n          \"An error occurred during registration. Please try again.\"\r\n        );\r\n      }\r\n      console.error(\"Registration error\", axiosError);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"username\">Username:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n        <input\r\n          id=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      {errorMessage && <div>{errorMessage}</div>}\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}