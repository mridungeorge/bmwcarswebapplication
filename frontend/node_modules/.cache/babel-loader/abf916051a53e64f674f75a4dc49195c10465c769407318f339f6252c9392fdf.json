{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mridu\\\\cybsecproj3\\\\frontend\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Define an interface for expected error response structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\n        username,\n        password\n      });\n      if (response.data.success) {\n        navigate(\"/\"); // Replace with the correct path to navigate after successful login\n      } else {\n        setErrorMessage(\"Invalid username or password\");\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        var _serverError$response, _serverError$response2;\n        // If the error is an AxiosError, attempt to get the response data\n        const serverError = error;\n        setErrorMessage(((_serverError$response = serverError.response) === null || _serverError$response === void 0 ? void 0 : (_serverError$response2 = _serverError$response.data) === null || _serverError$response2 === void 0 ? void 0 : _serverError$response2.message) || \"An error occurred during login\");\n      } else {\n        // Generic error handling if not an AxiosError\n        setErrorMessage(\"An error occurred during login\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"OcEh96ookApaGYrUhZcJPgbvkKE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","post","data","success","error","isAxiosError","_serverError$response","_serverError$response2","serverError","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mridu/cybsecproj3/frontend/src/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\n// Define an interface for expected error response structure\r\ninterface ErrorResponse {\r\n  message: string;\r\n}\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      if (response.data.success) {\r\n        navigate(\"/\"); // Replace with the correct path to navigate after successful login\r\n      } else {\r\n        setErrorMessage(\"Invalid username or password\");\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        // If the error is an AxiosError, attempt to get the response data\r\n        const serverError = error as AxiosError<ErrorResponse>;\r\n        setErrorMessage(\r\n          serverError.response?.data?.message ||\r\n            \"An error occurred during login\"\r\n        );\r\n      } else {\r\n        // Generic error handling if not an AxiosError\r\n        setErrorMessage(\"An error occurred during login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      <form onSubmit={handleSubmit}>{/* Form inputs and labels */}</form>\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAsB,OAAO;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAmC,IAAK;IAClEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,iCAAiC,EAAE;QACnEX,QAAQ;QACRE;MACF,CAAC,CAAC;MACF,IAAIQ,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLD,eAAe,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd,IAAInB,KAAK,CAACoB,YAAY,CAACD,KAAK,CAAC,EAAE;QAAA,IAAAE,qBAAA,EAAAC,sBAAA;QAC7B;QACA,MAAMC,WAAW,GAAGJ,KAAkC;QACtDT,eAAe,CACb,EAAAW,qBAAA,GAAAE,WAAW,CAACR,QAAQ,cAAAM,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBJ,IAAI,cAAAK,sBAAA,uBAA1BA,sBAAA,CAA4BE,OAAO,KACjC,gCACJ,CAAC;MACH,CAAC,MAAM;QACL;QACAd,eAAe,CAAC,gCAAgC,CAAC;MACnD;IACF;EACF,CAAC;EAED,oBACER,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAMyB,QAAQ,EAAEf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CAAC,EAClEtB,YAAY,iBAAIP,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEjB;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAAC3B,EAAA,CAvCQD,SAAS;EAAA,QAICJ,WAAW;AAAA;AAAAiC,EAAA,GAJrB7B,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}